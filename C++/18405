// Coding.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int virusMap[201][201] = { 0, };

queue<pair<int,int>> virusInfo[10001];

int mAV[4] = { 1,-1,0,0 };
int mAH[4] = { 0,0,1,-1 };

int main()
{
	/*3 3
	1 0 2
	0 0 0
	3 0 0
	2 3 2*/

	int n = 3, k = 3;
    cin>>n>>k;
    
    for(int i=1; i<=n; i++)
        for(int j=1; j<=n; j++)
        {
            cin>>virusMap[i][j];
            if(virusMap[i][j])
            {
                virusInfo[virusMap[i][j]].push({i,j});
            }
        }

	int s = 1, x = 2, y = 2;
    cin>>s>>x>>y;

	while (s--)
	{
		for (int i = 1; i <= k; i++)
		{
			int cnt = virusInfo[i].size();
			while (cnt--)
			{
				int row = virusInfo[i].front().first;
				int col = virusInfo[i].front().second;
				virusInfo[i].pop();

				//virusVisit[row][col] = true;

				queue<pair<int, int>> virusQ;
				virusQ.push({ row,col });

				//while (!virusQ.empty())
				{
					int vRow = virusQ.front().first;
					int vCol = virusQ.front().second;
					virusQ.pop();

					for (int j = 0; j < 4; j++)
					{
						int nRow = vRow + mAV[j];
						int nCol = vCol + mAH[j];

						if (0 <= nRow && nRow <=n && 0 <= nCol && nCol <= n && virusMap[nRow][nCol]==0)
						{
							//if (virusVisit[nRow][nCol])continue;
							virusMap[nRow][nCol] = i;
							virusInfo[i].push({ nRow,nCol });
						}
					}
				}

			}
		}
	}

	cout << virusMap[x][y] << endl;

	return 0;
}


