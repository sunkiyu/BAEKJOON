#include <iostream>
#include <algorithm>

using namespace std;
long long curHaveInfo[10001]= {0,};
int main()
{
    ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

   int curHave =4, mustHave = 11;
    long long maxVal=0;
    cin>>curHave>>mustHave;
    for(int i=0; i<curHave; i++)
    {
        cin>>curHaveInfo[i];
        maxVal = max(maxVal,curHaveInfo[i]);
    }
   

   long long dynmCh =0;
   long long start = 1; long long end = maxVal+1;
    
   while(1)
   {
       if (start >= end) break;
        long long chMid = (end + start)/2;
        int count=0;
       int intMid = chMid;

        for(int i=0; i<curHave; i++)
        {
            count += curHaveInfo[i]/intMid;
        }
       
        if(count < mustHave)
        {
            end = chMid;
            continue;
        }
        else
        {
            dynmCh = max(dynmCh, chMid);
            start = chMid+1;
            continue;
        }
   }
    cout<<dynmCh<<"\n";
    return 0;
}
