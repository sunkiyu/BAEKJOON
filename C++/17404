#include <iostream>
#include <functional>

using namespace std;
int rgbDat[1001][3] = {0,};
int rgb2DP[1001][3] = {0,};
int main()
{
   int rgbHouse = 8;
   int minRgbCost = 2e9;
    cin>>rgbHouse;
    
    for(int i=1; i<=rgbHouse; i++)
    {
        int a,b,c=0;
        cin>>a>>b>>c;
        rgbDat[i][0] = a;
        rgbDat[i][1] = b;
        rgbDat[i][2] = c;
    }
    
   auto rgbCalc = [&](){
   for(int i=3; i<=rgbHouse; i++)
   {
       for(int j=0; j<3; j++)
       {
           if(j==1)
               rgb2DP[i][j] = min(rgb2DP[i-1][0],rgb2DP[i-1][2])+rgbDat[i][j];
           else if(j==0)
               rgb2DP[i][j] = min(rgb2DP[i-1][1],rgb2DP[i-1][2])+rgbDat[i][j];
           else if(j==2)
               rgb2DP[i][j] = min(rgb2DP[i-1][0],rgb2DP[i-1][1])+rgbDat[i][j];
       };
   };
};

   int rgbANS = 2e9;
   //1이 R경일 경우 N번은 G or B여야한다.
   rgb2DP[2][0] = 2e9;
   rgb2DP[2][1] = rgbDat[1][0]+ rgbDat[2][1];
   rgb2DP[2][2] = rgbDat[1][0]+ rgbDat[2][2];
   rgbCalc();
   int tmpMin = min(rgb2DP[rgbHouse][1],rgb2DP[rgbHouse][2]);
   rgbANS = min(rgbANS,tmpMin);

   //1이 G경일 경우 N번은 R or B여야한다.
   rgb2DP[2][0] = rgbDat[1][1]+ rgbDat[2][0];
   rgb2DP[2][1] = 2e9;
   rgb2DP[2][2] = rgbDat[1][1]+ rgbDat[2][2];
   rgbCalc();
   tmpMin = min(rgb2DP[rgbHouse][0],rgb2DP[rgbHouse][2]);
     rgbANS = min(rgbANS,tmpMin);

   //1이 B경일 경우 N번은 R or G여야한다.
   rgb2DP[2][0] = rgbDat[1][2]+ rgbDat[2][0];
   rgb2DP[2][1] = rgbDat[1][2]+ rgbDat[2][1];
   rgb2DP[2][2] = 2e9;
   rgbCalc();
   tmpMin = min(rgb2DP[rgbHouse][0],rgb2DP[rgbHouse][1]);
     rgbANS = min(rgbANS,tmpMin);
    
    cout<<rgbANS<<endl;
    return 0;
}
