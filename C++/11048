#include <iostream>
#include <queue>

using namespace std;

int candyMap[1001][1001] = {0,};
int candyDP[1001][1001] = {0,};

int main()
{
   int cV[3] = {1,0,1};
   int cH[3] = {0,1,1};
    
   int candyRow =4, candyCol =3;
    cin >> candyRow >> candyCol;
    
    for(int i=0; i<candyRow; i++)
        for(int j=0; j<candyCol; j++)
        {
            cin>>candyMap[i][j];
        }
    
    candyDP[0][0] = candyMap[0][0];
    for(int i=1; i<candyCol; i++)
        candyDP[0][i] = candyDP[0][i-1] + candyMap[0][i];
    for(int i=1; i<candyRow; i++)
        candyDP[i][0] = candyDP[i-1][0] + candyMap[i][0];
    
    //이동 가능 방향은 대각선 오른쪽 아래, 아래,오른쪽 3가지 방향만 있다.
    //따라서 현재 위치의 최대값은 현재 위치로 오기전 위치 최대값 + 현재 위치의 값의 최대값을 구해주면 된다.
    for(int i=1; i<candyRow; i++)
        for(int j=1; j<candyCol; j++)
        {
            candyDP[i][j] = max(candyDP[i-1][j-1] + candyMap[i][j],max(candyDP[i-1][j]+candyMap[i][j],candyDP[i][j-1]+candyMap[i][j]));
        }
    
    
    cout << candyDP[candyRow-1][candyCol-1]<<"\n";
    return 0;
}
