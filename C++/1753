#include <iostream>
#include <vector>
#include <queue>
#include <cstring>

using namespace std;

vector<pair<int,int>> vertexs[20001];
int minVisit[20001] = { 0,};
int main()
{
	int vertex = 5, lines =6, start = 1;
    cin>>vertex>>lines;
    cin>>start;
    for(int i=0; i<lines; i++)
    {
        int a,b,c=0;
        cin>>a>>b>>c;
        vertexs[a].push_back({b,c});
    }
	for (int i = 1; i <= 20000; i++)minVisit[i] = 2e9;
	minVisit[start] = 0;

	priority_queue<pair<int,int>> verQ;
	verQ.push({0,start });

	while (!verQ.empty())
	{
		int cost = -verQ.top().first;
		int cur = verQ.top().second;
		verQ.pop();

		for (int i = 0; i < vertexs[cur].size(); i++)
		{
			int next = vertexs[cur][i].first;
			int nCost = vertexs[cur][i].second;
            
			if (minVisit[next] < cost + nCost)continue;
			minVisit[next] = cost + nCost;
			verQ.push({ -(cost + nCost),next });
		}
	}

	for (int i = 1; i <= vertex; i++)
	{
        if(minVisit[i]==2e9)
            cout<<"INF"<<"\n";
        else
            cout << minVisit[i] << "\n";
	}
	
	return 0;
}
