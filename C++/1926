#include <iostream>
#include <queue>

using namespace std;

int picMap[501][501] = { 0, };
int picMapVisit[501][501] = { 0, };

int mAH[4] = { 1,-1,0,0 };
int mAV[4] = { 0,0,1,-1 };

int maxWidth = 0;
int picCnt = 0;
int main()
{
	int row = 6, col = 5;
    cin>>row>>col;
    
    for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
            cin>>picMap[i][j];
        }
    }
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (picMapVisit[i][j]||!picMap[i][j])continue;
			picMapVisit[i][j] = 1;
			int tmpWidth = 1;
			picCnt++;
			queue<pair<int, int>> picQ;
			picQ.push({ i,j });

			while (!picQ.empty())
			{
				int pRow = picQ.front().first;
				int pCol = picQ.front().second;
				picQ.pop();

				for (int k = 0; k < 4; k++)
				{
					int nrow = pRow + mAV[k];
					int ncol = pCol + mAH[k];

					if (0 <= nrow && nrow < row && 0 <= ncol && ncol < col && picMap[nrow][ncol])
					{
						if (picMapVisit[nrow][ncol])continue;
						picMapVisit[nrow][ncol] = 1;
						tmpWidth++;
						picQ.push({ nrow,ncol });
					}
				}
			}
			maxWidth = max(maxWidth, tmpWidth);
		}
	}

	cout << picCnt << endl;
	cout << maxWidth << endl;

	return 0;
}
