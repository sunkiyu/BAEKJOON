#include <iostream>
#include <functional>
#include <vector>
#include <cstring>

using namespace std;

vector<int> kWorkList[1001];
int kWorked[1001] = {0,};
int b[1001] = {0,};
int main()
{
   int kangPeople = 5, kangWork =5;
   cin>>kangPeople>>kangWork;
    
    for(int i=1; i<=kangPeople; i++)
    {
        int workNo=0;
        cin>>workNo;
        for(int j=0; j<workNo; j++)
        {
            int job =0;
            cin>>job;
            kWorkList[i].push_back(job);
        }
    }

   int maxWorkCnt = 0;
   function<int(int)> kangDFS = [&](int worker)
   {
       if (kWorked[worker]) return 0;    //방문 된 정점은 매칭 불가
    kWorked[worker] = 1;
    for (int i = 0; i<kWorkList[worker].size(); i++) {
        int there = kWorkList[worker][i];        
        if (!b[there] || kangDFS(b[there])) {    //매칭이 되어있지 않은 정점을 만나거나 이미 매칭된 정점이 다른 정점과 매칭이 가능할 때
            b[there] = worker;        //매칭 시켜준 뒤 1을 리턴 해줌
            return 1;
        }
    }
    return 0;
   };
   for(int i=1; i<=kangPeople; i++)
   {
       memset(kWorked,0,sizeof(kWorked));
       if(kangDFS(i))maxWorkCnt++;
   }
    cout<<maxWorkCnt<<endl;
    return 0;
}
