#include <iostream>
#include <functional>

using namespace std;
char piriMap[1001][1001] = { 0, };
int curVisit[1001][1001] = { 0, };

int main()
{
	/*3 4
		DLLL
		DRLU
		RRRU*/

	int piriRow = 3, piriCol = 4;
    cin>>piriRow>>piriCol;
    
    for(int i=0; i<piriRow; i++)
    {
        for(int j=0; j<piriCol; j++)
        {
            cin>>piriMap[i][j];
        }
    }

	function<bool(int, int, int)> piriDFS = [&](int idx, int row, int col)
	{
		bool ret = false;
    //이미 방문한 곳이고 이전에 방문하여 사이클이 생성되는 곳인가? 그러다면 cycle ++ 해줄 필요가 없으므로 리턴 false
		if (curVisit[row][col] > 0 && idx != curVisit[row][col])return false;
    //이미 방문한 곳이고 내가 방문한 곳인가? 새로운 사이클 생성 c++ 해줄 필요가 있으므로 리턴 true
		else if (curVisit[row][col] > 0 && idx == curVisit[row][col]) return true;
		curVisit[row][col] = idx;

		if (piriMap[row][col] == 'D') ret = piriDFS(idx, row + 1, col);
		else if (piriMap[row][col] == 'U') ret = piriDFS(idx, row - 1, col);
		else if (piriMap[row][col] == 'L') ret = piriDFS(idx, row, col - 1);
		else if (piriMap[row][col] == 'R') ret = piriDFS(idx, row, col + 1);

		return ret;
	};

	int cycle = 0;
	int idx = 1;
	for (int i = 0; i < piriRow; i++)
	{
		for (int j = 0; j < piriCol; j++)
		{
				if (piriDFS(idx++, i, j)) 
					cycle++;
		}
	}

    cout << cycle <<"\n";
    return 0;
}
