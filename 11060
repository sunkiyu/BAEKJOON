#include <iostream>
#include <queue>

using namespace std;
int jumpMap[1001] = {0,};
int jumpDP[1001] = {0,};
int main()
{
    int len =0;
    cin>>len;
    
    for(int i=1; i<=len; i++)
        cin>>jumpMap[i];
    
     queue<pair<int,int>> jQ;
    jQ.push({1,0});
    int jpRet = 2e9;
    while (!jQ.empty())
    {
        int pos = jQ.front().first;
        int jpCnt = jQ.front().second;
        jQ.pop();

        if(pos == len)
        {
            jpRet = min(jpRet,jpCnt);
            continue;
        }

        for(int i=1; i<=jumpMap[pos];i++)
        {
            if(pos+i<=len && !jumpDP[pos+i])
            {
                jQ.push({pos+i,jpCnt+1});
                jumpDP[pos+i]= 1;
            }
            else if(pos+i>len)
                break;
        }


    }

    if(jpRet==2e9)  cout<<-1<<endl;
    else cout<<jpRet<<endl;

    return 0;
}
