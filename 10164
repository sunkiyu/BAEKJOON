#include <iostream>
#include <cstring>

using namespace std;


int spMap[16][16] = {0,};
int spV[4] = {1,0};
int spH[4] = {0,1};

int spDFS(int spRow, int spCol, int ckRow, int ckCol, int r, int c,bool toEnd)
{
    if(toEnd)
    {
        if(r == (spRow-1) && c == (spCol-1)) return 1;
    }
    else
    {
        if(r == ckRow && c == ckCol) return 1;
    }
    if(spMap[r][c]!=-1) return spMap[r][c];

    spMap[r][c] =0;
    for(int i=0; i<2; i++)
    {
        int nRow = r +spV[i];
        int nCol = c +spH[i];

        if(0<=nRow && 0<=nCol && nRow<spRow && nCol <spCol)
        {
            spMap[r][c] = spMap[r][c] + spDFS(spRow,spCol,ckRow,ckCol,nRow,nCol,toEnd);
        }
    }
    return spMap[r][c];
};

int main()
{
     int spRow = 3;
    int spCol = 5;
    int spNock =0;
    cin >>spRow >>spCol >>spNock;
    int spNo = 1,ckRow=0,ckCol=0;
    for(int i=0; i<spRow; i++)
        for(int j=0; j<spCol; j++)
        {
            spMap[i][j] =-1;
            if(spNo==spNock)
            {
                ckRow = i;
                ckCol =j;
            }
            spNo++;
       }
    int spRet = spDFS(spRow,spCol,ckRow,ckCol, 0,0,false);
    memset(spMap,-1,sizeof(spMap));
    int spRet2=  spDFS(spRow,spCol,ckRow,ckCol,ckRow,ckCol,true);
    cout<<spRet*spRet2<<endl;
    return 0;
}
